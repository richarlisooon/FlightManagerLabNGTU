spring.application.name=database-service
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
#Port
server.port=${DATABASE_SERVICE_PORT}
#Security
security.service-token=${SERVICE_TOKEN_VALUE}
security.service-token.header=${SERVICE_TOKEN_NAME}
#Postgres
spring.datasource.url=jdbc:postgresql://${POSTGRES_URL}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=${POSTGRES_SCHEMA}
#Mappings
mapping.dispatcher.get=/api/dispatcher/get
mapping.dispatcher.create=/api/dispatcher/create
mapping.dispatcher.update=/api/dispatcher/update
mapping.dispatcher.delete=/api/dispatcher/delete
mapping.plane.get=/api/plane/get
mapping.plane.create=/api/plane/create
mapping.plane.update=/api/plane/update
mapping.plane.delete=/api/plane/delete
mapping.airport.get=/api/airport/get
mapping.airport.create=/api/airport/create
mapping.airport.update=/api/airport/update
mapping.airport.delete=/api/airport/delete
mapping.flight.get=/api/flights/get
mapping.flight.create=/api/flights/create
mapping.flight.update=/api/flights/update
mapping.flight.delete=/api/flights/delete