version: '2.1'
services:

  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - .env
    ports:
      - 5433:5433
    command: -p 5433
    volumes:
      - data:/var/lib/postgresql/data

  database-service:
    image: database-service
    build: database-service
    container_name: database-service
    env_file:
      - .env
    ports:
      - 8081:8081
    depends_on:
      postgres:
        condition: service_started

  identity-service:
    image: identity-service
    build: identity-service
    container_name: identity-service
    env_file:
      - .env
    ports:
      - 8082:8082

  plane-service:
    image: plane-service
    build: plane-service
    container_name: plane-service
    env_file:
      - .env
    ports:
      - 8083:8083
    volumes:
      - data:/var/lib/plane-service/data

  gateway:
    image: gateway
    build: gateway
    container_name: gateway
    env_file:
      - .env
    ports:
      - 8080:8080
  frontend:
    image: node:18-alpine
    container_name: frontend
    build:
      context: ./node
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./node:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - API_BASE_URL=http://gateway:8080
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    depends_on:
      - gateway
    restart: unless-stopped
volumes:
  data: